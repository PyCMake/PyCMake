---

branches:
 only:
  - master

# borrowed heavily from ogrisel/python-appveyor-demo

version: "0.0.1.{build}"

environment:
  matrix:
    ##################################################
    # NOTE: For now, Fortran features are not tested #
    ##################################################

    # Visual Studio (Python 2 & 3, 32 & 64 bit)
#    - PYTHON: "C:\\Python27"
#      PYTHON_VERSION: "2.7.x"
#      PYTHON_ARCH: "32"
#      CMAKE_GENERATOR: Visual Studio 9 2008
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"
      CMAKE_GENERATOR: Visual Studio 9 2008 Win64
      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
      EXTRA_TEST_ARGS: "-m \"not fortran\""
      SKIP: "0"
      BLOCK: "1"

#    - PYTHON: "C:\\Python35"
#      PYTHON_VERSION: "3.5.x"
#      PYTHON_ARCH: "32"
#      CMAKE_GENERATOR: Visual Studio 14 2015
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"
#
#    - PYTHON: "C:\\Python35-x64"
#      PYTHON_VERSION: "3.5.x"
#      PYTHON_ARCH: "64"
#      CMAKE_GENERATOR: Visual Studio 14 2015 Win64
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"
#
#    # MinGW (Python 2 & 3, 64 bit only)
#    - PYTHON: "C:\\Python27-x64"
#      PYTHON_VERSION: "2.7.x"
#      PYTHON_ARCH: "64"
#      CMAKE_GENERATOR: "MinGW Makefiles"
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"
#
#    - PYTHON: "C:\\Python35"
#      PYTHON_VERSION: "3.5.x"
#      PYTHON_ARCH: "32"
#      CMAKE_GENERATOR: "MinGW Makefiles"
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"
#
#    # Default -- make sure Visual Studio works as the default
#    # (Python 2 & 3, 64 bit only)
#    - PYTHON: "C:\\Python27-x64"
#      PYTHON_VERSION: "2.7.x"
#      PYTHON_ARCH: "64"
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"
#
#    - PYTHON: "C:\\Python35-x64"
#      PYTHON_VERSION: "3.5.x"
#      PYTHON_ARCH: "64"
#      RUN: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run.cmd"
#      EXTRA_TEST_ARGS: "-m \"not fortran\""
#      SKIP: "1"
#      BLOCK: "0"

init:
  - ps: "\
      iex (\
        (New-Object Net.Webclient).DownloadString(\
          'https://raw.githubusercontent.com/\
            appveyor/ci/master/scripts/enable-rdp.ps1'\
        )\
      )"

  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: "\
    if (\
      $env:APPVEYOR_PULL_REQUEST_NUMBER -and \
      $env:APPVEYOR_BUILD_NUMBER -ne (\
        (\
          Invoke-RestMethod \
            ` https://ci.appveyor.com/api/projects/\
                $env:APPVEYOR_ACCOUNT_NAME/\
                $env:APPVEYOR_PROJECT_SLUG/\
                history?recordsNumber=50\
        ).builds | ` Where-Object pullRequestId -eq \
                                  $env:APPVEYOR_PULL_REQUEST_NUMBER\
      )[0].buildNumber\
    ) { ` \
      throw \"There are newer queued builds \
              for this pull request, failing early.\" \
    }"

install:
  - cmd: "%PYTHON%\\python.exe .\\ci\\driver.py appveyor install"
  - cmd: "%RUN% %PYTHON%\\python.exe .\\ci\\driver.py appveyor style"

build_script:
  - cmd: "%RUN% %PYTHON%\\python.exe .\\ci\\driver.py appveyor build"

test_script:
  - cmd: "%RUN% %PYTHON%\\python.exe .\\ci\\driver.py appveyor test"

after_test:
  - cmd: "%RUN% %PYTHON%\\python.exe .\\ci\\driver.py appveyor after_test"

on_finish:
  - ps: "\
      if ($Env:BLOCK -ceq \"1\") {
        $blockRdp = $true ; \
        iex (\
          (New-Object Net.Webclient).DownloadString(\
            'https://raw.githubusercontent.com/\
             appveyor/ci/master/scripts/enable-rdp.ps1'\
          )\
        )
      }"

on_failure:
  - ps: "Get-EventLog AppVeyor -newest 10 | Format-List"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

matrix:
  fast_finish: false

notifications:
  - provider: GitHubPullRequest
    auth_token:
      secure: iXYaAwXJcHdnRGTeb1Gk1PembhlZleCGDK2oJgsiFvA=
    template: >-
      {{#passed}}:white_check_mark:{{/passed}}{{#failed}}:x:{{/failed}}
      [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}})
      (commit {{commitUrl}} by @{{&commitAuthorUsername}})

shallow_clone: false
