---

version: "0.0.1.{build}"

notifications:
  - provider: GitHubPullRequest
    auth_token:
      secure: iXYaAwXJcHdnRGTeb1Gk1PembhlZleCGDK2oJgsiFvA=
    template: >-
      {{#passed}}:white_check_mark:{{/passed}}{{#failed}}:x:{{/failed}}
      [Build {{&projectName}} {{buildVersion}} {{status}}]({{buildUrl}})
      (commit {{commitUrl}} by @{{&commitAuthorUsername}})

shallow_clone: true

environment:
  matrix:
    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python27"
      CMAKE_GENERATOR: MinGW Makefiles
    - PYTHON: "C:\\Python27"
      CMAKE_GENERATOR: Visual Studio 9 2008
    - PYTHON: "C:\\Python27"
      CMAKE_GENERATOR: Visual Studio 10

    - PYTHON: "C:\\Python35"
    - PYTHON: "C:\\Python35"
      CMAKE_GENERATOR: MinGW Makefiles
    - PYTHON: "C:\\Python35"
      CMAKE_GENERATOR: Visual Studio 9 2008
    - PYTHON: "C:\\Python35"
      CMAKE_GENERATOR: Visual Studio 10

matrix:
  fast_finish: true

before_build:
  # workaround for CMake not wanting sh.exe on PATH for MinGW
  - cmd: >-
      set PATH=%PATH:C:\Program Files (x86)\Git\bin;=%
  - cmd: >-
      set PATH=C:\MinGW\bin;%PATH%

build: off

install:
  - cmd: >-
      %PYTHON%\python.exe -m pip install -U pip
  - cmd: >-
      %PYTHON%\python.exe -m pip install wheel
  - cmd: >-
      cinst cmake

before_test:
  - cmd: >-
      ci\build.cmd %PYTHON%\python.exe -m pip install -r requirements.txt
  - cmd: >-
      ci\build.cmd %PYTHON%\python.exe -m pip install -r requirements-dev.txt

test_script:
  - cmd: >-
      ci\build.cmd %PYTHON%\python.exe -m nose -w tests

after_test:
  - cmd: >-
      ci\build.cmd %PYTHON%\python.exe setup.py bdist_wheel

artifacts:
  - path: >-
      dist\*

